# Microtest commands related records

record(bo,		"$(P):Mode") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR))Mode")
    field(PINI, "NO")
    field(VAL,  "0")
	field(ZNAM, "Tensile")
    field(ONAM, "Compression")
}

record(mbbo,    "$(P):MotorSpeed") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR))MotorSpeed")
    field(PINI, "NO")
    field(ZRST, "0.1 mm/min")
    field(ZRVL, "0")
    field(ONST, "0.2 mm/min")
    field(ONVL, "1")
    field(TWST, "0.5 mm/min")
    field(TWVL, "2")
    field(THST, "0.75 mm/min")
    field(THVL, "3")
    field(FRST, "1.0 mm/min")
    field(FRVL, "4")
}

record(mbbi,    "$(P):MotorSpeed_RBV") {
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR))MotorSpeed_RBV")
    field(ZRST, "0.1 mm/min")
    field(ZRVL, "0")
    field(ONST, "0.2 mm/min")
    field(ONVL, "1")
    field(TWST, "0.5 mm/min")
    field(TWVL, "2")
    field(THST, "0.75 mm/min")
    field(THVL, "3")
    field(FRST, "1.0 mm/min")
    field(FRVL, "4")
    field(SCAN, "1 second")
}

record(ai,		"$(P):MovingDone")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR))MovingDone")
    field(PINI, "YES")
    field(SCAN, "1 second")
}

record(bo,		"$(P):StopMotor") {
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR))StopMotor")
    field(PINI, "NO")
    field(VAL,  "0")
    field(ZNAM, "Start")
    field(ONAM, "Stop")
}

record(ao,		"$(P):Load")
{
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR))Load")
    field(PREC, "2")
}

record(ai,		"$(P):Force_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR))Force_RBV")
    field(PINI, "NO")
    field(PREC, 2)
    field(SCAN, "1 second")
    field(LOLO, -9000)
    field(LLSV, "MAJOR")
}

record(ao,		"$(P):Extension")
{
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR))Extension")
    field(PREC, "3")
}

record(ai,		"$(P):Extension_RBV")
{
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR))Extension_RBV")
    field(PINI, "YES")
    field(PREC, 3)
    field(SCAN, "1 second")
}

record(ai,		"$(P):StartPosition")
{
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR))StartPosition")
    field(PINI, "NO")
    field(PREC, 3)
    field(SCAN, "1 second")
}

record(ao,		"$(P):AbsolutePosition")
{
    field(PINI, "NO")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR))AbsolutePosition")
    field(PREC, "3")
}

record(calc,	"$(P):AbsolutePosition_RBV")
{
    field(CALC, "C>0?A-B:A+B")
    field(INPA, "$(P):StartPosition  CP MS")
    field(INPB, "$(P):Extension_RBV  CP MS")
    field(INPC, "$(P):Mode NPP MS")
    field(PREC, 3)
    field(PINI, "YES")
}

# Soft motors: absolute, extension, load

record(motor,   "$(P):LoadMotor")
{
  field(DTYP, "Soft Channel")
  field(DESC, "input load")
  field(OUT, "$(P):Load PP MS")
  field(RDBL, "$(P):Force_RBV NPP MS")
  field(URIP, "Yes")
  field(RRES, "1")
  field(EGU, "N")
  field(RMOD, "3")
  field(MRES, "0.01")
  field(RDBD, "0.1")
  field(STOO, "$(P):StopMotor PP")
  field(DINP, "$(P):MovingDone NPP NMS")
}

record(motor,   "$(P):AbsoluteMotor")
{
  field(DTYP, "Soft Channel")
  field(DESC, "input absolute position")
  field(OUT, "$(P):AbsolutePosition PP MS")
  field(RDBL, "$(P):AbsolutePosition_RBV NPP MS")
  field(URIP, "Yes")
  field(RRES, "1")
  field(EGU, "mm")
  field(RMOD, "3")
  field(MRES, "0.001")
  field(RDBD, "0.01")
  field(STOO, "$(P):StopMotor PP")
  field(DINP, "$(P):MovingDone NPP NMS")
}

record(motor,   "$(P):ExtensionMotor")
{
  field(DTYP, "Soft Channel")
  field(DESC, "input desired extension")
  field(OUT, "$(P):Extension PP MS")
  field(RDBL, "$(P):Extension_RBV NPP MS")
  field(URIP, "Yes")
  field(RRES, "1")
  field(EGU, "mm")
  field(RMOD, "3")
  field(MRES, "0.001")
  field(RDBD, "0.01")
  field(STOO, "$(P):StopMotor PP")
  field(DINP, "$(P):MovingDone NPP NMS")
}
